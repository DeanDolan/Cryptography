/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.cryptography;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author deand
 */
public class FileEncrypterGUI extends javax.swing.JFrame {

    /**
     * Creates new form FileEncrypterGUI
     */
    public FileEncrypterGUI() {
        initComponents();
    }

    int Encryptionkey() {
        int key = Integer.parseInt(fileEncryptionTf.getText());
        return key;
    }

    void EncryptFile() {
        int key = Encryptionkey();
        JFileChooser obj = new JFileChooser();
        obj.showOpenDialog(null);
        File file = obj.getSelectedFile();

        try {
            FileInputStream obj1 = new FileInputStream(file);
            byte[] data = new byte[obj1.available()];
            obj1.read(data);
            int i = 0;
            for (byte b : data) {
                data[i] = (byte) (b ^ key);
                i++;
            }
            FileOutputStream obj2 = new FileOutputStream(file);
            obj2.write(data);
            obj2.close();
            obj1.close();
            JOptionPane.showMessageDialog(null, "Congratulations! The File has been safely encrypted.");

        } catch (Exception e) {
            e.printStackTrace();

        }
    }

    int Decryptionkey() {
        int key = Integer.parseInt(fileDecryptionTf.getText());
        return key;
    }

    void DecryptFile() {
        int key = Decryptionkey();
        JFileChooser obj = new JFileChooser();
        obj.showOpenDialog(null);
        File file = obj.getSelectedFile();

        try {
            FileInputStream obj1 = new FileInputStream(file);
            byte[] data = new byte[obj1.available()];
            obj1.read(data);
            int i = 0;
            for (byte b : data) {
                data[i] = (byte) (b ^ key);
                i++;
            }
            FileOutputStream obj2 = new FileOutputStream(file);
            obj2.write(data);
            obj2.close();
            obj1.close();
            JOptionPane.showMessageDialog(null, "Congratulations! The File has been safely decrypted.");

        } catch (Exception e) {
            e.printStackTrace();

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        fileTitle = new javax.swing.JLabel();
        fileEncryptionTf = new javax.swing.JTextField();
        fileDecryptionTf = new javax.swing.JTextField();
        backBtn = new javax.swing.JButton();
        fileEncryptionBtn = new javax.swing.JButton();
        fileDecryptionBtn = new javax.swing.JButton();
        fileEncryptKeyLbl = new javax.swing.JLabel();
        fileDecryptKeyLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        fileTitle.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        fileTitle.setText("File Encrypter/Decrypter");

        backBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        backBtn.setText("<- Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        fileEncryptionBtn.setBackground(new java.awt.Color(102, 153, 255));
        fileEncryptionBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        fileEncryptionBtn.setText("File Encryption");
        fileEncryptionBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        fileEncryptionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileEncryptionBtnActionPerformed(evt);
            }
        });

        fileDecryptionBtn.setBackground(new java.awt.Color(102, 153, 255));
        fileDecryptionBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        fileDecryptionBtn.setText("File Decryption");
        fileDecryptionBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        fileDecryptionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileDecryptionBtnActionPerformed(evt);
            }
        });

        fileEncryptKeyLbl.setText("Enter encryption key:");

        fileDecryptKeyLbl.setText("Enter decryption key:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backBtn))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fileTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(fileEncryptKeyLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)
                                .addComponent(fileDecryptKeyLbl)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(23, 23, 23))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fileEncryptionBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fileDecryptionBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(fileEncryptionTf, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE)
                        .addComponent(fileDecryptionTf, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fileTitle)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileEncryptKeyLbl)
                    .addComponent(fileDecryptKeyLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileEncryptionTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fileDecryptionTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(fileEncryptionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(fileDecryptionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(backBtn)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        setVisible(false);
        SoftwareAppsGUI obj = new SoftwareAppsGUI();
        obj.setVisible(true);
    }//GEN-LAST:event_backBtnActionPerformed

    private void fileEncryptionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileEncryptionBtnActionPerformed
        if (fileEncryptionTf.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ecryption key is needed.");
            return; 
        } else {
            EncryptFile();
        }
    }//GEN-LAST:event_fileEncryptionBtnActionPerformed

    private void fileDecryptionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileDecryptionBtnActionPerformed
        if (fileDecryptionTf.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Decryption key is needed.");
            return; 
        } else {
            DecryptFile();
        }
    }//GEN-LAST:event_fileDecryptionBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FileEncrypterGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FileEncrypterGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FileEncrypterGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FileEncrypterGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FileEncrypterGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel fileDecryptKeyLbl;
    private javax.swing.JButton fileDecryptionBtn;
    private javax.swing.JTextField fileDecryptionTf;
    private javax.swing.JLabel fileEncryptKeyLbl;
    private javax.swing.JButton fileEncryptionBtn;
    private javax.swing.JTextField fileEncryptionTf;
    private javax.swing.JLabel fileTitle;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
